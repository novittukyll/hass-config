- sensor:
  - name: "Radonin tila"
    unique_id: 'radon_warning'
    icon: mdi:radioactive
    state: |
      {% if states('sensor.mqtt_airthings_waveplus_sisu_radon_short_term') | float(0) > 150 or states('sensor.mqtt_airthings_waveplus_living_room_radon_short_term') | float(0) > 150 %}
        Korkea
      {% elif states('sensor.mqtt_airthings_waveplus_sisu_radon_short_term') | float(0) > 100 or states('sensor.mqtt_airthings_waveplus_living_room_radon_short_term') | float(0) > 100 %}
        Nousussa
      {% else %}
        Alhainen
      {% endif %}
    attributes:
      reporting_entity: |
        {% if states('sensor.radon_warning') == 'Korkea' and states('sensor.mqtt_airthings_waveplus_sisu_radon_short_term') | float(0) > 150 %}
          sensor.mqtt_airthings_waveplus_sisu_radon_short_term
        {% elif states('sensor.radon_warning') == 'Korkea' and states('sensor.mqtt_airthings_waveplus_living_room_radon_short_term') | float(0) > 150 %}
          sensor.mqtt_airthings_waveplus_living_room_radon_short_term
        {% elif states('sensor.radon_warning') == 'Nousussa' and states('sensor.mqtt_airthings_waveplus_sisu_radon_short_term') | float(0) > 100 %}
          sensor.mqtt_airthings_waveplus_sisu_radon_short_term
        {% elif states('sensor.radon_warning') == 'Nousussa' and states('sensor.mqtt_airthings_waveplus_living_room_radon_short_term') | float(0) > 100 %}
          sensor.mqtt_airthings_waveplus_living_room_radon_short_term
        {% endif %}

  - name: "CO2 tila"
    unique_id: 'co2_state'
    icon: mdi:molecule-co2
    state: |
      {% if (states('sensor.mqtt_airthings_waveplus_sisu_co2') | float(0) < 1000) and (states('sensor.mqtt_airthings_waveplus_living_room_co2') | float(0) < 1000) and (states('sensor.netatmo_koti_olohuone_co2') | float(0) < 1000) and (states('sensor.netatmo_koti_olohuone_makuuhuone_co2') | float(0) < 1000) %}
        Alhainen
      {% else %}
        Korkea
      {% endif %}
    attributes:
      reporting_entity: |
        {% if (states('sensor.mqtt_airthings_waveplus_sisu_co2') | float(0) >= 1000) %}
          sensor.mqtt_airthings_waveplus_sisu_co2
        {% elif (states('sensor.mqtt_airthings_waveplus_living_room_co2') | float(0) >= 1000) %}
          sensor.mqtt_airthings_waveplus_living_room_co2
        {% elif (states('sensor.netatmo_koti_olohuone_co2') | float(0) >= 1000) %}
          sensor.netatmo_koti_olohuone_co2
        {% elif (states('sensor.netatmo_koti_olohuone_makuuhuone_co2') | float(0) >= 1000) %}
          sensor.netatmo_koti_olohuone_makuuhuone_co2
        {% endif %}

  - name: "Kosteus tila"
    unique_id: 'humidity_state'
    icon: |
      {% if (states('sensor.mqtt_airthings_waveplus_sisu_humidity') | float(0) < 25) or (states('sensor.mqtt_airthings_waveplus_living_room_humidity') | float(0) < 25) or (states('sensor.netatmo_koti_olohuone_humidity') | float(0) < 25) or (states('sensor.mqtt_otso_humidity') | float(0) < 25) %}
        mdi:water-minus
      {% elif (states('sensor.mqtt_airthings_waveplus_sisu_humidity') | float(0) > 60) or (states('sensor.mqtt_airthings_waveplus_living_room_humidity') | float(0) > 60) or (states('sensor.netatmo_koti_olohuone_humidity') | float(0) > 60) or (states('sensor.mqtt_otso_humidity') | float(0) > 60) %}
        mdi:water-alert
      {% else %}
        mdi:water-check
      {% endif %}
    state: |
      {% if (states('sensor.mqtt_airthings_waveplus_sisu_humidity') | float(0) < 25) or (states('sensor.mqtt_airthings_waveplus_living_room_humidity') | float(0) < 25) or (states('sensor.netatmo_koti_olohuone_humidity') | float(0) < 25) or (states('sensor.mqtt_otso_humidity') | float(0) < 25) %}
        Alhainen
      {% elif (states('sensor.mqtt_airthings_waveplus_sisu_humidity') | float(0) > 60) or (states('sensor.mqtt_airthings_waveplus_living_room_humidity') | float(0) > 60) or (states('sensor.netatmo_koti_olohuone_humidity') | float(0) > 60) or (states('sensor.mqtt_otso_humidity') | float(0) > 60) %}
        Korkea
      {% else %}
        Normaali
      {% endif %}
    attributes:
      reporting_entity: |
        {% if (states('sensor.mqtt_airthings_waveplus_sisu_humidity') | float(0) < 25) or (states('sensor.mqtt_airthings_waveplus_sisu_humidity') | float(0) > 60) %}
          sensor.mqtt_airthings_waveplus_sisu_humidity
        {% elif (states('sensor.mqtt_airthings_waveplus_living_room_humidity') | float(0) < 25) or (states('sensor.mqtt_airthings_waveplus_living_room_humidity') | float(0) > 60) %}
          sensor.mqtt_airthings_waveplus_living_room_humidity
        {% elif (states('sensor.netatmo_koti_olohuone_humidity') | float(0) < 25) or (states('sensor.netatmo_koti_olohuone_humidity') | float(0) > 60) %}
          sensor.netatmo_koti_olohuone_humidity
        {% elif (states('sensor.mqtt_otso_humidity') | float(0) < 25) or (states('sensor.mqtt_otso_humidity') | float(0) > 60) %}
          sensor.mqtt_otso_humidity
        {% endif %}

  - name: "Ilmanlaatu"
    unique_id: 'air_quality'
    icon: |
      {% if states('sensor.radon_warning') != 'Alhainen' %}
        mdi:radioactive
      {% elif states('sensor.co2_state') != 'Alhainen' %}
        mdi:molecule-co2
      {% elif states('sensor.humidity_state') != 'Normaali' %}
        mdi:water-alert
      {% else %}
        mdi:leaf
      {% endif %}
    state: |
      {% if states('sensor.radon_warning') == 'Nousussa' %}
        Radon nousussa
      {% elif states('sensor.radon_warning') == 'Korkea' %}
        Radon korkealla
      {% elif states('sensor.co2_state') != 'Alhainen' %}
        CO2 korkealla
      {% elif states('sensor.humidity_state') == 'Alhainen' %}
        Matala ilmankosteus
      {% elif states('sensor.humidity_state') == 'Korkea' %}
        Korkea ilmankosteus
      {% else %}
        Hyvä
      {% endif %}
    attributes:
      reporting_entity: |
        {% if states('sensor.humidity_state') == 'Alhainen' or states('sensor.humidity_state') == 'Korkea' %}
          {{ state_attr('sensor.humidity_state', 'reporting_entity') }}
        {% else %}
          sensor.mqtt_airthings_waveplus_living_room_temperature
        {% endif %}

  - name: "home_state"
    unique_id: "home_state"
    icon: mdi:home
    state: "{{ states('input_select.home_state') }}"

  - name: "sauna_state"
    unique_id: "sauna_state"
    icon: mdi:shower
    state: "{{ states('input_select.sauna_state') }}"

  - name: notification_count
    unique_id: notification_count
    state: |
      {{ states.binary_sensor | selectattr('state', 'equalto', 'on') | map(attribute='entity_id') | select('search', 'notification') | list | length }}

  - name: roborock_s6_pure_filter
    unique_id: roborock_s6_pure_filter
    state: |
      {{ (states('sensor.roborock_s6_pure_filter_left') | int(default=0) / 5400) | int(default=0) }}
    attributes:
      friendly_name: Suodatin
      icon: mdi:air-filter
      unit_of_measurement: '%'

  - unique_id: roborock_s6_pure_main_brush
    state: |
      {{ (states('sensor.roborock_s6_pure_main_brush_left') | int(default=0) / 10800) | int(default=0) }}
    attributes:
      friendly_name: Pääharja
      icon: mdi:brush-variant
      unit_of_measurement: '%'

  - unique_id: roborock_s6_pure_sensors
    state: |
      {{ (states('sensor.roborock_s6_pure_sensor_dirty_left') | int(default=0) / 1080) | int(default=0) }}
    attributes:
      friendly_name: Sensorit
      icon: mdi:broadcast
      unit_of_measurement: '%'

  - unique_id: roborock_s6_pure_side_brush
    state: |
      {{ (states('sensor.roborock_s6_pure_side_brush_left') | int(default=0) / 7200) | int(default=0) }}
    attributes:
      friendly_name: Sivuharja
      icon: mdi:star-three-points-outline
      unit_of_measurement: '%'

  - name: roborock_s6_pure_time_to_next_clean
    unique_id: roborock_s6_pure_time_to_next_clean
    state: |
      {{ (as_datetime(states('sensor.roborock_s6_pure_last_clean_end')) + timedelta(days = 3)).isoformat() }}
    attributes:
      friendly_name: Seuraava siivous
      icon: mdi:vacuum-outline
      device_class: timestamp

  - name: roborock_s6_pure_area_cleaned_since_dustbin_emptying
    unique_id: roborock_s6_pure_area_cleaned_since_dustbin_emptying
    state: "{{ states('input_number.vacuum_total_area_cleaned_since_emptying') }}"
    attributes:
      friendly_name: Tyhjennyksen jälkeen siivottu alue
      icon: mdi:texture-box
      unit_of_measurement: "{{ state_attr('input_number.vacuum_total_area_cleaned_since_emptying', 'unit_of_measurement') }}"

  - name: roborock_s6_pure_dustbin_level
    unique_id: roborock_s6_pure_dustbin_level
    state: |
      {% set percentage = states('input_number.vacuum_total_area_cleaned_since_emptying') | float / 200 * 100 %}
      {% if (percentage > 100) %}
        {{ 100 }}
      {% else %}
        {{ percentage | int }}
      {% endif %}
    attributes:
      friendly_name: Pölysäiliön taso
      icon: mdi:delete-empty
      unit_of_measurement: '%'

  - name: lights_on_count
    unique_id: lights_on_count
    state: |
      {% set lights_on = expand('light.group_all_flat') | selectattr('state', 'equalto', 'on') | list | length %}
      {% if is_state('switch.tplink_hs100_3', 'on') %}
        {% set lights_on = lights_on + 1 %}
      {% endif %}

      {{ lights_on }}

  - name: devices_on_count
    unique_id: devices_on_count
    state: |
      {{ expand('binary_sensor.group_devices') | selectattr('state', 'equalto', 'on') | list | length }}

  - name: nibe_heat_pump_state
    unique_id: nibe_heat_pump_state
    state: >-
      {% set mapper =  {
          'IDLE' : 'Joutilas',
          'HEATING' : 'Lämmitys',
          'HOT_WATER' : 'Käyttövesi',
          'HOT_WATER_COMPRESSOR_OFF' : 'Käyttövesi, kompressori pois',
          'HOT_WATER_WITH_ELECTRICITY' : 'Käyttövesi sähköllä',
          'UNKNOWN': 'Tuntematon' } %}
      {% set state = states('sensor.mqtt_nibe_heat_pump_state') %}
      {{ mapper[state] if state in mapper else 'Unknown' }}
    icon: >-
      {% set mapper =  {
          'IDLE' : 'mdi:sleep',
          'HEATING' : 'mdi:fire',
          'HOT_WATER' : 'mdi:water',
          'HOT_WATER_COMPRESSOR_OFF' : 'mdi:water',
          'HOT_WATER_WITH_ELECTRICITY' : 'hass:flash',
          'UNKNOWN': 'mdi:help' } %}
      {% set state = states('sensor.mqtt_nibe_heat_pump_state') %}
      {{ mapper[state] if state in mapper else 'mdi:help' }}

  - name: nibe_supply_delta_temp
    unique_id: nibe_supply_delta_temp
    unit_of_measurement: "°C"
    device_class: temperature
    state: "{{ ((states('sensor.nibe_supply_temp')|float) - (states('sensor.nibe_supply_return_temp')|float))|round(1) }}"
    availability: "{{ is_state('sensor.nibe_heat_pump_state', 'Lämmitys') }}"

  - name: nibe_hot_water_delta_temp
    unique_id: nibe_hot_water_delta_temp
    unit_of_measurement: "°C"
    device_class: temperature
    state: "{{ ((states('sensor.nibe_supply_temp')|float) - (states('sensor.nibe_supply_return_temp')|float))|round(1) }}"
    availability: "{{ is_state('sensor.nibe_heat_pump_state', 'Käyttövesi') }}"

  - name: nibe_brine_delta_temp
    unique_id: nibe_brine_delta_temp
    unit_of_measurement: "°C"
    device_class: temperature
    state: "{{ ((states('sensor.nibe_brine_in_temp')|float) - (states('sensor.nibe_brine_out_temp')|float))|round(1) }}"
    availability: "{{ is_state('sensor.nibe_heat_pump_state', 'Lämmitys') }}"

  - name: laundry_tower_state
    unique_id: laundry_tower_state
    icon: mdi:washing-machine
    state: |
      {% if states('sensor.washing_machine_status') != 'Off' or states('sensor.tumble_dryer_status') != 'Off' %}
        Päällä
      {% else %}
        Pois
      {% endif %}

- select:
  - name: roborock_s6_pure_speed
    state: |
      {% set fan_speed = state_attr('vacuum.roborock_s6_pure', 'fan_speed') %}
      {{ iif(fan_speed == None, 'Standard', fan_speed) }}
    options: |
      {% set fan_speed_list = state_attr('vacuum.roborock_s6_pure', 'fan_speed_list') %}
      {{ iif(fan_speed_list == None, ['Standard'], fan_speed_list) }}
    select_option:
      service: vacuum.set_fan_speed
      target:
        entity_id: vacuum.roborock_s6_pure
      data:
        fan_speed: >
          {{ option }}

- binary_sensor:
  - name: "Liiketunnistimet sisällä"
    unique_id: 'indoor_motion_sensors'
    device_class: motion
    state: |
      {% if (is_state('binary_sensor.hue_motion_sensor_1', 'on') or is_state('binary_sensor.hue_motion_sensor_2', 'on')) %}
        on
      {% else %}
        off
      {% endif %}

  - name: "Autotallin ilmankuivaimen tila"
    unique_id: 'garage_dehumidifier'
    state: '{{ states("sensor.garage_dehumidifier_energy_consumption_current") | float(0) > 10.0 }}'

  - name: "Ovet"
    unique_id: 'doors'
    device_class: door
    state: |
      {% if (is_state('binary_sensor.mqtt_garage_door', 'on') or is_state('lock.ulko_ovi', 'unlocked')) %}
        on
      {% else %}
        off
      {% endif %}

  - name: "Home Assistant update available"
    unique_id: "hass_update_available"
    icon: mdi:update
    state: |
      {% if states('sensor.hass_version_installed') != states('sensor.hass_version_latest') %}
        on
      {% else %}
        off
      {% endif %}
    attributes:
      latest_version: "{{ states('sensor.hass_version_latest') }}"
      icon_color: green
      text_summary: 'Home Assistant päivitys saatavilla'
      text_description: "Uusin version on {{ states('sensor.hass_version_latest') }}"

  - name: "Samsung Q90 Series 65"
    unique_id: samsung_q90_series_65
    icon: mdi:television
    state: "{{ iif(is_state('media_player.samsung_q90_series_65', 'on'), 'on', 'off') }}"

  - name: "LG 65 C1"
    unique_id: lg_65_c1
    icon: mdi:television
    state:  "{{ iif(is_state('media_player.lg_65_c1', 'off'), 'off', 'on') }}"

  ### Notifications ###

  - name: "notification_heat_pump_alarm"
    unique_id: "notification_heat_pump_alarm"
    icon: mdi:alert-outline
    state: |
      {% if is_state('sensor.nibe_alarm_number', '0') %}
        off
      {% else %}
        on
      {% endif %}
    attributes:
      icon_color: 'var(--warning-color)'
      text_summary: "Maalämpöpumpun hälytys {{ states('sensor.nibe_alarm_number') }}. <a href='https://ammattilaiset.nibe.fi/tuki/vikakoodihaku/'>Tarkista vikakoodi</a"
      tap_action: url
      tap_action_url_path: "https://ammattilaiset.nibe.fi/tuki/vikakoodihaku/"

  - name: "notification_todays_precipitation"
    unique_id: "notification_todays_precipitation"
    icon: |
        {% set forecast = state_attr('weather.koti_custom', 'forecast') %}
        {% set precipitation_type = state_attr('sensor.koti_precipitation', 'type') %}
        {% if precipitation_type == 'Snow' or (forecast and forecast[0] and forecast[0].condition == 'snowy') %}
          mdi:weather-snowy-heavy
        {% elif forecast and forecast[0] and forecast[0].condition == 'snowy-rainy' %}
          mdi:weather-snowy-rainy
        {% else %}
          mdi:weather-rainy
        {% endif %}
    state: |
      {% set precipitation = states('sensor.koti_precipitation' ) %}
      {% if precipitation | float(0) > 0.0 %}
        on
      {% else %}
        off
      {% endif %}
    attributes:
      icon_color: 'rgb(var(--color-blue))'
      text_summary: |
        {% set forecast = state_attr('weather.koti_custom', 'forecast') %}
        {% set precipitation = states('sensor.koti_precipitation' ) %}
        {% set precipitation_type = state_attr('sensor.koti_precipitation', 'type') %}
        {% if precipitation | float(0) > 0.0 %}
          {% if precipitation_type == 'Snow' or (forecast and forecast[0] and forecast[0].condition == 'snowy') %}
            Odotettavissa lumisadetta {{ precipitation }} mm
          {% elif forecast and forecast[0] and forecast[0].condition == 'snowy-rainy' %}
            Odotettavissa räntäsadetta {{ precipitation }} mm
          {% else %}
            Odotettavissa vesisadetta {{ precipitation }} mm
          {% endif %}
        {% endif %}
      text_description: |
        {% set forecast = state_attr('weather.koti_custom', 'forecast') %}
        {% if forecast and forecast[0] and forecast[0].precipitation %}
          Ennuste {{ forecast[0].precipitation }} mm. Todennäköisyys {{ forecast[0].precipitation_probability }} %
        {% endif %}
      tap_action: more-info
      tap_action_entity: weather.koti_custom

  - name: "notification_synology_update_available"
    unique_id: "notification_synology_update_available"
    icon: "mdi:update"
    state: "{{ states('update.synology_dsm_update') }}"
    attributes:
      icon_color: 'green'
      text_summary: "Synology päivitys saatavilla"
      text_description: "Uusin version on {{ state_attr('update.synology_dsm_update', 'latest_version') }}"

  - name: "notification_hass_update_available"
    unique_id: "notification_hass_update_available"
    icon: "mdi:update"
    state: "{{ states('binary_sensor.hass_version_latest_update_available') }}"
    attributes:
      icon_color: 'green'
      text_summary: "Home Assistant päivitys saatavilla"
      text_description: "Uusin version on {{ states('sensor.hass_version_latest') }}."
      tap_action: url
      tap_action_url_path: "https://www.home-assistant.io/latest-release-notes/"

  - name: notification_on_vacation
    unique_id: notification_on_vacation
    icon: mdi:palm-tree
    state: "{{ states('input_boolean.on_vacation') }}"
    attributes:
      icon_color: green
      text_summary: "Lomamoodi on päällä"
      tap_action: more-info
      tap_action_entity: input_boolean.on_vacation

  - name: notification_synology_security_warning
    unique_id: notification_synology_security_warning
    icon: mdi:alert-outline
    state: "{{ states('binary_sensor.synology_security_status') }}"
    attributes:
      icon_color: 'var(--warning-color)'
      text_summary: "Synologyn turvataso alhainen"
      tap_action: more-info
      tap_action_entity: binary_sensor.synology_security_status

  - name: notification_garage_door_open
    unique_id: notification_garage_door_open
    icon: "{{ iif(is_state('binary_sensor.mqtt_garage_door', 'on'), 'mdi:garage-open', 'mdi:garage')  }}"
    state: "{{ states('binary_sensor.mqtt_garage_door') }}"
    attributes:
      icon_color: 'var(--warning-color)'
      text_summary: "Autotallin ovi on auki"

  - name: notification_front_door_open
    unique_id: notification_front_door_open
    icon: "{{ iif(is_state('lock.ulko_ovi', 'unlocked'), 'mdi:door-open', 'mdi:door')  }}"
    state: "{{ iif(is_state('lock.ulko_ovi', 'unlocked'), 'on', 'off') }}"
    attributes:
      icon_color: 'var(--warning-color)'
      text_summary: "Ulko-ovi on auki"

  - name: notification_sauna
    unique_id: notification_sauna
    icon: mdi:shower
    state: "{{ iif(is_state('input_select.sauna_state', 'Pois'), 'off', 'on') }}"
    attributes:
      icon_color: |
        {% if is_state('input_select.sauna_state', 'Lämpenee') %}
          yellow
        {% elif is_state('input_select.sauna_state', 'Lämmin') %}
          red
        {% elif is_state('input_select.sauna_state', 'Jäähtyy') %}
          #00ccf5
        {% endif %}
      text_summary: |
        {% if is_state('input_select.sauna_state', 'Lämpenee') %}
          Sauna lämpenee
        {% elif is_state('input_select.sauna_state', 'Lämmin') %}
          Sauna on lämmin
        {% elif is_state('input_select.sauna_state', 'Jäähtyy') %}
          Sauna jäähtyy
        {% endif %}
      text_description: |
        Lämpötila {{ states('sensor.mqtt_sauna_temperature') }} {{state_attr('sensor.mqtt_sauna_temperature', 'unit_of_measurement') }}. Kosteus {{ states('sensor.mqtt_sauna_humidity') }} {{state_attr('sensor.mqtt_sauna_humidity', 'unit_of_measurement') }}.

  - name: notification_humidity
    unique_id: notification_humidity
    icon: "{{ state_attr('sensor.humidity_state', 'icon') }}"
    state: "{{ iif(is_state('sensor.humidity_state', 'Normaali'), 'off', 'on') }}"
    attributes:
      icon_color: |
        {% if is_state('sensor.humidity_state', 'Alhainen') %}
          var(--humidity-low-color)
        {% elif is_state('sensor.humidity_state', 'Korkea') %}
          var(--humidity-high-color)
        {% endif %}
      text_summary: |
        {% if is_state('sensor.humidity_state', 'Alhainen') %}
          Alhainen ilmankosteus
        {% elif is_state('sensor.humidity_state', 'Korkea') %}
          Korkea ilmankosteus
        {% endif %}
      text_description: |
        {% set reporting_entity = state_attr('sensor.humidity_state', 'reporting_entity') %}
        {% if reporting_entity %}
          {{ state_attr(reporting_entity, 'friendly_name') }} {{ states(reporting_entity) }} {{ state_attr(reporting_entity, 'unit_of_measurement') }}
        {% endif %}
      tap_action: more-info
      tap_action_entity: "{{ state_attr('sensor.humidity_state', 'reporting_entity') }}"

  - name: notification_radon_warning
    unique_id: notification_radon_warning
    icon: mdi:radioactive
    state: "{{ iif(is_state('sensor.radon_warning', 'Alhainen'), 'off', 'on') }}"
    attributes:
      icon_color: |
        {% if is_state('sensor.radon_warning', 'Nousussa') %}
          var(--warning-color)
        {% elif is_state('sensor.radon_warning', 'Korkea') %}
          var(--error-color)
        {% endif %}
      text_summary: |
        {% if is_state('sensor.radon_warning', 'Nousussa') %}
          Radon nousussa
        {% elif is_state('sensor.radon_warning', 'Korkea') %}
          Radon korkealla!
        {% else %}
          Radon turvallisella tasolla
        {% endif %}
      text_description: |
        {% set reporting_entity = state_attr('sensor.radon_warning', 'reporting_entity') %}
        {% if reporting_entity %}
          {{ state_attr(reporting_entity, 'friendly_name') }} {{ states(reporting_entity) }} {{ state_attr(reporting_entity, 'unit_of_measurement') }}
        {% endif %}
      tap_action: more-info
      tap_action_entity: "{{ state_attr('sensor.radon_warning', 'reporting_entity') }}"

  - name: notification_co2
    unique_id: notification_co2
    icon: mdi:molecule-co2
    state: "{{ iif(is_state('sensor.co2_state', 'Alhainen'), 'off', 'on') }}"
    attributes:
      icon_color: var(--warning-color)
      text_summary: Hiilidioksidi korkealla
      text_description: |
        {% set reporting_entity = state_attr('sensor.co2_state', 'reporting_entity') %}
        {% if reporting_entity %}
          {{ state_attr(reporting_entity, 'friendly_name') }} {{ states(reporting_entity) }} {{ state_attr(reporting_entity, 'unit_of_measurement') }}
        {% endif %}
      tap_action: more-info
      tap_action_entity: "{{ state_attr('sensor.co2_state', 'reporting_entity') }}"

  - name: notification_garage_dehumidifier
    unique_id: notification_garage_dehumidifier
    icon: mdi:fan
    state: "{{ states('switch.tplink_hs110_2') }}"
    attributes:
      icon_color: var(--humidity-high-color)
      text_summary: 'Autotallin ilmankuivain on päällä'
      text_description: "Kosteus tällä hetkellä {{ states('sensor.netatmo_koti_olohuone_autotalli_humidity') }} %"

  - name: notification_garage_dehumidifier_bucket_full
    unique_id: notification_garage_dehumidifier_bucket_full
    icon: mdi:format-color-fill
    state: |
      {% set current_state_duration = as_timestamp(now()) - as_timestamp(states.switch.tplink_hs110_2.last_changed) %}
      {% set current_consumption = states('sensor.garage_dehumidifier_energy_consumption_current') | int(0) %}
      {% if is_state('switch.tplink_hs110_2', 'on') and current_state_duration > (5 * 60) and current_consumption < 10 %}
        on
      {% else %}
        off
      {% endif %}
    attributes:
      icon_color: var(--humidity-high-color)
      text_summary: Tyhjennä autotallin ilmankuivain

  # Not in use during summer time
  #
  # - name: notification_sisu_humidifier
  #   unique_id: notification_sisu_humidifier
  #   icon: mdi:waves-arrow-up
  #   state: "{{ states('switch.tplink_hs110_1') }}"
  #   attributes:
  #     icon_color: var(--humidity-high-color)
  #     text_summary: 'Sisun ilmankostutin päällä'
  #     text_description: "Kosteus tällä hetkellä {{ states('sensor.mqtt_airthings_waveplus_sisu_humidity') }} %"
  #     tap_action: more-info
  #     tap_action_entity: switch.tplink_hs110_1

  - name: notification_stiga_charger_charging
    unique_id: notification_stiga_charger_charging
    icon: mdi:battery-charging-medium
    state: "{{ iif(states('switch.tplink_hs110_1') == 'on' and states('sensor.tplink_hs110_1_current_consumption') | float(0) > 5, 'on', 'off') }}"
    attributes:
      icon_color: var(--warning-color)
      text_summary: Stigan laturi lataa akkua
      text_description: "Virankulutus tällä hetkellä {{ states('sensor.tplink_hs110_1_current_consumption') }} W"
      tap_action: more-info
      tap_action_entity: switch.tplink_hs110_1

  - name: notification_stiga_charger_full
    unique_id: notification_stiga_charger_full
    icon: mdi:battery-high
    state: "{{ iif(states('switch.tplink_hs110_1') == 'on' and states('sensor.tplink_hs110_1_current_consumption') | float(0) <= 5, 'on', 'off') }}"
    attributes:
      icon_color: var(--color-green)
      text_summary: Stigan akku täynnä
      tap_action: more-info
      tap_action_entity: switch.tplink_hs110_1

  - name: notification_living_room_humidifier
    unique_id: notification_living_room_humidifier
    icon: mdi:waves-arrow-up
    state: "{{ states('switch.tplink_hs100_2') }}"
    attributes:
      icon_color: var(--humidity-high-color)
      text_summary: 'Olohuoneen ilmankostutin päällä'
      text_description: "Kosteus tällä hetkellä {{ states('sensor.mqtt_airthings_waveplus_living_room_humidity') }} %"
      tap_action: more-info
      tap_action_entity: switch.tplink_hs100_2

  - name: notification_heat_pump_data_missing
    unique_id: notification_heat_pump_data_missing
    icon: mdi:alert-outline
    state: "{{ iif(is_state('sensor.nibe_heat_pump_state', 'Unknown'), 'on', 'off') }}"
    attributes:
      icon_color: var(--warning-color)
      text_summary: Maalämpöpumppu ei lähetä dataa

  - name: notification_vacuuming
    unique_id: notification_vacuuming
    icon: mdi:robot-vacuum
    state: "{{ iif(is_state('vacuum.roborock_s6_pure', 'docked') or is_state('vacuum.roborock_s6_pure', 'unavailable'), 'off', 'on') }}"
    attributes:
      icon_color: green
      text_summary: |
        {% if is_state('vacuum.roborock_s6_pure', 'cleaning') %}
          Robotti-imuri siivoaa
        {% elif is_state('vacuum.roborock_s6_pure', 'paused') or is_state('vacuum.roborock_s6_pure', 'idle') %}
          Robotti-imuri on pysäytetty
        {% elif is_state('vacuum.roborock_s6_pure', 'returning') %}
          Robotti-imuri palaamassa telakkaan
        {% elif is_state('vacuum.roborock_s6_pure', 'error') %}
          Robotti-imuri on jumissa
        {% else %}
          Robotti-imurin tila ei tiedossa
        {% endif %}
      text_description: "Siivottu alue {{ states('sensor.roborock_s6_pure_current_clean_area') | round(0) }} neliötä"

  - name: notification_time_to_vacuum
    unique_id: notification_time_to_vacuum
    icon: mdi:robot-vacuum
    state: |
      {% set last_cleaned_secs = as_timestamp(now()) - as_timestamp(states.sensor.roborock_s6_pure_last_clean_end.state) %}
      {% if ((last_cleaned_secs / 60 / 60 / 24) > 3) and not is_state('binary_sensor.notification_vacuuming', 'on') %}
        on
      {% else %}
        off
      {% endif %}
    attributes:
      icon_color: var(--warning-color)
      text_summary: |
        {% set last_cleaned_secs = (as_timestamp(now()) - as_timestamp(states.sensor.roborock_s6_pure_last_clean_end.state)) %}
        Imurointia ei ole suoritettu {{ (last_cleaned_secs / 60 / 60 / 24) | round(0) }} päivään
      text_description: Oleskelutilojen imurointi aloitetaan kun kotoa poistutaan tai kun se käynnistetään käsin

  - name: notification_vacuum_dustbin_full
    unique_id: notification_vacuum_dustbin_full
    icon: mdi:delete-empty
    state: "{{ iif(is_state('sensor.roborock_s6_pure_dustbin_level', '100'), 'on', 'off') }}"
    attributes:
      icon_color: var(--error-color)
      text_summary: Robotti-imurin pölysäiliö on täynnä

  - name: notification_raining
    unique_id: notification_raining
    icon: mdi:weather-rainy
    state: "{{ iif(states('sensor.netatmo_koti_olohuone_sade_rain') | float > 0, 'on', 'off') }}"
    attributes:
      icon_color: var(--color-blue)
      text_summary: "Ulkona sataa, sademäärä nyt {{ states('sensor.netatmo_koti_olohuone_sade_rain') | float | round(1) }} mm"
      text_description: "Koko päivän sademäärä {{ states('sensor.netatmo_koti_olohuone_sade_rain_today') | float | round(1) }} mm"

  - name: notification_washing_machine
    unique_id: notification_washing_machine
    icon: mdi:washing-machine
    state: "{{ iif(is_state('sensor.washing_machine_status', 'Off'), 'off', 'on') }}"
    attributes:
      icon_color: var(--color-blue)
      text_summary: |
        {% set mapper =  {
          'In use' : 'käynnissä',
          'Finished' : 'valmis' } %}
        {% set state = states('sensor.washing_machine_status') %}
        Pesukone on {{ mapper[state] if state in mapper else 'päällä' }}
      text_description: |
        {% if states('sensor.washing_machine_status') != 'Finished' %}
          {% set time = states('sensor.washing_machine_remaining_time').split(':') %}
          {% set hours = time[0] | int %}
          {% set minutes = time[1] | int %}
          {% set hoursStr = hours ~ ' tuntia' if hours != 1 else '1 tunti' %}
          {% set minutesStr = minutes ~ ' minuuttia' if minutes != 1 else '1 minuutti' %}
        Ohjelmaa on jäljellä{{ ' ' ~ hoursStr if hours > 0 else ''}} {{ minutesStr if minutes > 0 else ''}}.
        {% else %}
        Kulutettu sähkö {{ states('sensor.washing_machine_energy') }} W ja vesimäärä {{ states('sensor.washing_machine_water_consumption') }} l.
        {% endif %}

  - name: notification_tumble_dryer
    unique_id: notification_tumble_dryer
    icon: mdi:tumble-dryer
    state: "{{ iif(is_state('sensor.tumble_dryer_status', 'Off'), 'off', 'on') }}"
    attributes:
      icon_color: var(--color-green)
      text_summary: |
        {% set mapper =  {
          'In use' : 'käynnissä',
          'Finished' : 'valmis' } %}
        {% set state = states('sensor.tumble_dryer_status') %}
        Kuivausrumpu on {{ mapper[state] if state in mapper else 'päällä' }}
      text_description: |
        {% if states('sensor.tumble_dryer_status') != 'Finished' %}
          {% set time = states('sensor.tumble_dryer_remaining_time').split(':') %}
          {% set hours = time[0] | int %}
          {% set minutes = time[1] | int %}
          {% set hoursStr = hours ~ ' tuntia' if hours != 1 else 'yksi tunti' %}
          {% set minutesStr = minutes ~ ' minuuttia' if minutes != 1 else 'yksi minuutti' %}
        Ohjelmaa on jäljellä{{ ' ' ~ hoursStr if hours > 0 else ''}} {{ minutesStr if minutes > 0 else ''}}.
        {% else %}
        Kulutettu sähkö {{ states('sensor.tumble_dryer_energy') }} W.
        {% endif %}
