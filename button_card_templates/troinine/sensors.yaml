---
base_sensor:
  styles:
    icon:
      - color: |
          [[[
            var unit = entity.attributes.device_class
            var state = entity.state

            if (unit === 'temperature') {
              var color = "red";
              var current_temp = entity.state;
              if (current_temp < 20) {
                color = "rgb(var(--color-blue))";
              } else if (current_temp < 23) {
                color = "rgb(var(--color-green))";
              } else if (current_temp < 25) {
                color = "rgb(var(--color-yellow))";
              } else {
                color = "rgb(var(--color-red))";
              }

              return color;
            }
          ]]]

sensor:
  template:
    - base_card
    - base_icon_name
    - base_sensor
  show_state: true
  show_last_changed: false
  state_display: |
    [[[
      var state = entity.state
      if (state == 'on') {
        state = variables.text_state_on
      } else if (state == 'off') {
        state = variables.text_state_off
      }

      if (entity.attributes.unit_of_measurement) {
        return state + '<span class="unit"> ' + entity.attributes.unit_of_measurement + '</span>'
      } else {
        return state
      }
    ]]]
  extra_styles: |
    span.unit {
      font-size: 1.2rem;
    }
  styles:
    grid:
      - grid-template-areas: |
          "i ."
          "n n"
          "s s"
          "s s"
      - grid-template-columns: 2.5rem 3.5fr
      - grid-template-rows: 2.5rem 1.25fr 1.25fr 1fr
    state:
      - align-self: end
      - justify-self: start
      - font-size: 1.8rem
      - font-weight: 300
    name:
      - justify-self: start
      - align-self: end

sensor_graph:
  variables:
    line_color: dodgerblue
  show_last_changed: false
  show_state: false
  show_icon: false
  show_name: false
  show_label: false
  template:
    - base
    - base_sensor
    - info
  hold_action:
    action: more-info
  custom_fields:
    icon_state_name:
      card:
        type: "custom:button-card"
        template:
          - base_icon_name
          - base_sensor
        show_state: true
        show_label: false
        entity: "[[[ return entity.entity_id ]]]"
        name: "[[[ return variables.name_override ]]]"
        styles:
          grid:
            - grid-template-areas: |
                "i s"
                "i n"
            - grid-template-columns: 2.5rem 3fr
            - grid-template-rows: 1.25rem 1.25rem
          name:
            - padding-left: 0.5rem
            - font-size: 0.8rem
            - filter: opacity(40%)
            - place-self: start
          state:
            - padding-left: 0.5rem
            - font-size: 1rem
            - place-self: start
          card:
            - box-shadow: "none"
            - border-radius: "var(--border-radius) var(--border-radius) 0 0"
            - padding: "1.4rem 1.4rem 0 1.4rem"
    graph:
      card:
        type: "custom:mini-graph-card"
        entities:
          - "[[[ return entity.entity_id ]]]"
        font_size: 60
        points_per_hour: 0.4
        line_width: 4
        line_color: "[[[ return variables.line_color ]]]"
        height: 200
        align_state: right
        show:
          name: false
          icon: false
          state: false
        style: |
          ha-card {
            box-shadow: none;
            border-radius: 0 0 var(--border-radius) var(--border-radius)
            padding: 0px 0px 0px 0px !important;
          }
          ha-card.flex.type-custom-mini-graph-card {
            padding: 0px 0px 0px 0px !important;
          }
  styles:
    grid:
      - grid-template-areas: |
          "icon_state_name"
          "graph"
      - grid-template-columns: 1fr
      - grid-template-rows: 1fr 3fr
    card:
      - border-radius: "var(--border-radius)"
      - box-shadow: "var(--box-shadow)"
      - padding: "0px"
    custom_fields:
      graph:
        - align-self: end

compact_sensor_graph:
  template:
    - sensor_graph
    - compact_card
