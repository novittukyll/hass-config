blueprint:
  name: Room motion to control lights
  description: Adjust lights based on movement in a room
  domain: automation
  input:
    motion_sensor:
      name: Motion Sensor
      description: This sensor will be synchronized with the lights.
      selector:
        entity:
          domain: binary_sensor
          device_class: motion
    target_light:
      name: Lights
      description: The lights to keep in sync.
      selector:
        entity:
          domain: light
    light_level_sensor:
      name: Light level sensor
      description: The sensor detecting light level in the room
      selector:
        entity:
          domain: illuminance
    no_motion_wait:
      name: Wait time
      description: Time to leave the light on after last motion is detected.
      default: 20
      selector:
        number:
          min: 0
          max: 120
          unit_of_measurement: minutes
    lights_on_below_level:
      name: Light level
      description: The light level below which the lights are turned on
      default: 50
      selector:
        number:
          min: 0
          max: 1000
          unit_of_measurement: lx

variables:
  target_light: !input target_light
  target_motion_sensor: !input motion_sensor
  light_level_sensor: !input light_level_sensor
  lights_on_below_level: !input lights_on_below_level

# Restart the automation if motion is detected within the delay.
mode: restart
max_exceeded: silent

trigger:
  - platform: state
    entity_id: !input motion_sensor
    from: "off"
    to: "on"

condition:
  - condition: state
    entity_id: input_boolean.automations_enabled
    state: 'on'
  - condition: state
    entity_id: input_select.home_state
    state: Kotona
  - condition: time
    after: '08:00'
    before: '22:00'

action:
  - choose:
    - conditions:
      - condition: template
        value_template: "{{ states(light_level_sensor) | int < lights_on_below_level }}"
      sequence:
        - service: light.turn_on
          target:
            entity_id: !input target_light
  - wait_for_trigger:
    - platform: state
      entity_id: !input motion_sensor
      from: "on"
      to: "off"
      for:
        minutes: !input no_motion_wait
  - choose:
    - conditions:
      - condition: time
        after: '08:00'
        before: '20:30'
      sequence:
        - service: light.turn_off
          target:
            entity_id: !input target_light
